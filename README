------------
Introduction
------------
The Tynt API is a JSON-based web service located at http://api.tynt.com/.

This project contains a Tynt API client implemented in Java.  This project is
Maven-based, and therefore requires that you have a current version of Maven
installed (See maven.apache.org for details).  If you're interested in a client
implementation in Ruby, checkout our Ruby-based project on github.com.


------------------------------------
Building the Tynt API Client Library
------------------------------------

To build the client library, run the following Maven command:

# mvn package

This will create a tynt-client-<version>.jar file in the 'target' directory.
If you'd like to install the library for use in your own maven project,
run the following command:

# mvn install

After you've installed the library to your local Maven repository directory,
you'll be able to add a dependency entry in your own project's POM file.  Add
the dependency like so:

<project>
  ...
  <dependencies>
    ...
    <dependency>
      <groupId>com.tynt.api</groupId>
      <artifactId>tynt-client</artifactId>
      <version>LATEST</version>
    </dependency>
    ...
  </dependencies>
  ...
</project>

Where "LATEST" should be set to the current version of the Tynt Client library.


---------------------------------
Using the Tynt API Client Library
---------------------------------

The Tynt client requires the following .jar files to be on the classpath:

tynt-client-<version>.jar
jackson-core-asl-1.6.0.jar
jackson-mapper-asl-1.6.0.jar

If you're using Maven, you'll get the Jackson JSON libraries automatically.  If
you're not using Maven, you'll need to download these .jar files from
jackson.codehaus.org

The Tynt API is used primarily through the TyntClient class.  You can explore
the features of the Tynt API by browsing TyntClient's available methods.

Below is a simple example of how to use TyntClient to print out the top Tynt
categories.

import com.tynt.api.v1.*;
import com.tynt.api.v1.model.*;
import java.util.*;

public class TyntCategoryPrinter {
  public static void main(String... args) {
    String appId = "your-app-id-from-dev.tynt.com-goes-here";    
    TyntClient tyntClient = new TyntClient(appId);
    try {
      Collection<Category> categories = tyntClient.getTopCategories();
      for (Category category : categories) {
        System.out.println("Category: " + category.getDisplayName());
      }
    }
    catch (TyntAuthenticationException ex) {
      System.err.println(
        "Your Tynt App ID is invalid.  Get a valid one from dev.tynt.com.");
    }
    catch(TyntApiException ex) {
      System.err.println("The Tynt API exploded!");
    }
  }
}

For this code example to run, you'll need to make sure that the "appId"
variable is set to a valid Tynt app ID.  If you don't have an app ID yet, you
can get one at dev.tynt.com.


----------
Contact Us
----------

Have questions of feedback?  Contact us at support@tynt.com
